apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId rootProject.ext.applicationId
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionName rootProject.versionName
        versionCode rootProject.versionCode
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }

    signingConfigs {
        release
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), '../proguard.cfg'
        }

        release {
            debuggable false
            minifyEnabled true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), '../proguard.cfg', '../proguard-gson.cfg', '../proguard-simplexml.cfg'
            signingConfig signingConfigs.release
        }
    }

    flavorDimensions "tier"
    productFlavors {

        production {
        }

        beta {
            applicationIdSuffix '.beta'
        }

    }

    lintOptions {
        disable 'MissingTranslation'
    }

    packagingOptions {
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE.txt'
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
    dependencies {
        implementation project(':showCaseView')
        implementation 'com.android.support:appcompat-v7:' +project.compatVersion
        implementation 'com.android.support:design:'+ project.compatVersion
        implementation 'com.android.support:preference-v7:' + project.compatVersion
        implementation 'com.android.support:cardview-v7:' + project.compatVersion
        implementation 'com.android.support:gridlayout-v7:' + project.compatVersion
        implementation 'com.google.android.gms:play-services-analytics:16.0.4'
        implementation 'com.google.firebase:firebase-crash:16.2.1'
        implementation 'com.google.firebase:firebase-core:16.0.4'
        implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.10.0'
        implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'
        implementation 'com.google.code.gson:gson:2.8.2'
        implementation 'org.apache.commons:commons-lang3:3.7'
        implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.1'
        implementation group: 'commons-io', name: 'commons-io', version: '2.5'
        implementation 'com.jakewharton:butterknife:9.0.0-SNAPSHOT'
        implementation 'com.android.support:multidex:1.0.3'
        annotationProcessor 'com.jakewharton:butterknife-compiler:9.0.0-SNAPSHOT'
        kapt 'com.jakewharton:butterknife-compiler:9.0.0-SNAPSHOT'
        implementation ('com.squareup.retrofit2:retrofit:2.4.0') {
            exclude module: 'okhttp'
        }
        implementation ('com.squareup.retrofit2:converter-simplexml:2.4.0'){
            exclude module: 'stax-api'
            exclude module: 'stax'
            exclude module: 'xpp3'
        }
        implementation "android.arch.lifecycle:extensions:1.1.1"
        annotationProcessor "android.arch.lifecycle:compiler:1.1.1"
        implementation 'com.squareup.picasso:picasso:2.71828'
        implementation 'com.crashlytics.sdk.android:crashlytics:2.9.5'

        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:0.22.5"

        testImplementation 'junit:junit:4.12'
        androidTestImplementation 'commons-io:commons-io:2.5'
        androidTestImplementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.10.0'
        androidTestImplementation group: 'com.squareup.okhttp3', name: 'mockwebserver', version: '3.6.0'
        androidTestImplementation('com.android.support.test:runner:0.5') {
            // Necessary if your app targets Marshmallow (since the test runner
            // hasn't moved to Marshmallow yet)
            exclude group: 'com.android.support', module: 'support-annotations'
        }

        // Set this dependency to use JUnit 4 rules
        androidTestImplementation('com.android.support.test:rules:0.5') {
            // Necessary if your app targets Marshmallow (since the test runner
            // hasn't moved to Marshmallow yet)
            exclude group: 'com.android.support', module: 'support-annotations'
        }
        // Set this dependency to build and run Espresso tests
        androidTestImplementation 'com.android.support.test.espresso:espresso-contrib:2.2.2', {
            exclude group: 'com.android.support', module: 'support-annotations'
            exclude group: 'com.android.support', module: 'support-v4'
            exclude group: 'com.android.support', module: 'design'
            exclude group: 'com.android.support', module: 'recyclerview-v7'
        }
    }

}

Properties props = new Properties()
def propFile = file('../keystore/signing.properties')
if (propFile.canRead()){
    props.load(new FileInputStream(propFile))

    if (props!=null && props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&
            props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {

        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
    } else {
        android.buildTypes.release.signingConfig = null
    }
}else {
    android.buildTypes.release.signingConfig = null
}

apply plugin: 'com.google.gms.google-services'
repositories {
    mavenCentral()
}
dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
kotlin {
    experimental {
        coroutines "enable"
    }
}