apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId rootProject.ext.applicationId
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionName rootProject.versionName
        versionCode rootProject.versionCode
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }

    signingConfigs {
        release
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), '../proguard.cfg'
        }

        release {
            debuggable false
            minifyEnabled true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), '../proguard.cfg', '../proguard-gson.cfg', '../proguard-simplexml.cfg'
            signingConfig signingConfigs.release
        }
    }

    flavorDimensions "tier"
    productFlavors {

        production {
        }

        beta {
            applicationIdSuffix '.beta'
        }

    }

    lintOptions {
        disable 'MissingTranslation'
    }

    packagingOptions {
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE.txt'
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    useLibrary 'android.test.runner'
    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'

    dependencies {
        implementation 'com.android.support:appcompat-v7:' + project.compatVersion
        implementation 'com.android.support:design:' + project.compatVersion
        implementation 'com.android.support:preference-v7:' + project.compatVersion
        implementation 'com.android.support:cardview-v7:' + project.compatVersion
        implementation 'com.android.support:gridlayout-v7:' + project.compatVersion
        implementation 'com.android.support:support-annotations:' + project.compatVersion
        implementation 'com.google.android.gms:play-services-analytics:16.0.6'
        implementation 'com.google.firebase:firebase-core:16.0.6'
        implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.12.0'
        implementation 'com.squareup.okhttp3:logging-interceptor:3.12.0'
        implementation 'com.google.code.gson:gson:2.8.2'
        implementation 'org.apache.commons:commons-lang3:3.7'
        implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.2'
        implementation group: 'commons-io', name: 'commons-io', version: '2.6'
        implementation group: 'com.android.support', name: 'multidex', version: '1.0.3'
        implementation('com.squareup.retrofit2:retrofit:2.5.0') {
            exclude module: 'okhttp'
        }
        implementation "android.arch.lifecycle:extensions:1.1.1"
        kapt "android.arch.lifecycle:compiler:1.1.1"
        implementation('com.squareup.picasso:picasso:2.71828') {
            exclude group: 'com.android.support'
            exclude module: ['exifinterface', 'support-annotations']
        }
        implementation 'com.crashlytics.sdk.android:crashlytics:2.9.7'

        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:0.27.0-eap13"

        implementation group: 'com.tickaroo.tikxml', name: 'core', version: '0.8.13'
        implementation group: 'com.tickaroo.tikxml', name: 'annotation', version: '0.8.13'
        implementation 'com.tickaroo.tikxml:retrofit-converter:0.8.13'
        kapt 'com.tickaroo.tikxml:processor:0.8.13'

        implementation project(':exoplayer-library')
        implementation project(':exoplayer-extension-okhttp')
        implementation project(':exoplayer-extension-ffmpeg')


        testImplementation 'junit:junit:4.12'
        androidTestImplementation 'commons-io:commons-io:2.6'
        androidTestImplementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.12.0'
        androidTestImplementation group: 'com.squareup.okhttp3', name: 'mockwebserver', version: '3.6.0'
        androidTestImplementation('com.android.support.test:runner:0.5') {
            // Necessary if your app targets Marshmallow (since the test runner
            // hasn't moved to Marshmallow yet)
            exclude group: 'com.android.support', module: 'support-annotations'
        }

        androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    }

}

Properties props = new Properties()
def propFile = file('../keystore/signing.properties')
if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))

    if (props != null && props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&
            props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {

        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
    } else {
        android.buildTypes.release.signingConfig = null
    }
} else {
    android.buildTypes.release.signingConfig = null
}

apply plugin: 'com.google.gms.google-services'
dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}